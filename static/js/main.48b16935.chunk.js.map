{"version":3,"sources":["components/Draggble.js","utils.js","components/Droppable.js","components/RouteBuilder.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Draggable","name","useDrag","type","item","collect","monitor","opacity","isDragging","drag","ref","style","getBezierBasis","i","n","t","f","Math","pow","globalToMap","projection","position","mapObject","fromGlobalPixels","converter","pageToGlobal","x","y","getZoom","Droppable","allowedDropEffect","children","map","setTargets","setSelectedTarget","setTargetsPoints","useDrop","accept","drop","targets","count","filter","target","indexOf","length","current","newPlacemark","options","get","getClientOffset","points","copy","onPlaceMarkDrag","onPlacmarkDbClick","pointerIndex","editable","useState","bezeir","setBezier","pointer","setPointer","useEffect","arr","step","undefined","res","Array","ind","b","getBezierCurve","placemark","index","draggable","onDragEnd","e","onDblclick","geometry","preset","iconColor","balloonCloseButton","strokeColor","strokeWidth","strokeStyle","slice","strokeOpacity","editorMaxPoints","mapData","center","zoom","RLSMap","start","setPointerIndex","simulationSpeed","selectedTarget","targetsPoint","mapRef","useRef","React","setTimeout","newPosition","poitsCopy","pointsCopy","cutted","splice","removeByIndex","console","warn","defaultState","width","height","onClick","newPoint","push","onContextmenu","instanceRef","behaviors","disable","Object","keys","routeIndex","RouteBuilder","targetTypes","App","setStart","setSimulationSpeed","targetsPoints","DndProvider","backend","HTML5Backend","className","axis","onChange","xmin","xmax","value","fill","onTargetSelect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b16935.chunk.js","sourcesContent":["import React from \"react\";\nimport {useDrag} from \"react-dnd\";\n\nexport const Draggable = ({name}) => {\n\tconst [{opacity}, drag] = useDrag(() => ({\n\t\ttype: 'draggable',\n\t\titem: {name},\n\t\tcollect: (monitor) => ({\n\t\t\topacity: monitor.isDragging() ? 0.4 : 1,\n\t\t}),\n\t}), [name]);\n\treturn (<div ref={drag} style={{opacity}}>\n\t\t{name}\n\t</div>);\n};","function getBezierBasis(i, n, t) {\n\tfunction f(n) {\n\t\treturn (n <= 1) ? 1 : n * f(n - 1);\n\t}\n\n\treturn (f(n)/(f(i)*f(n - i)))* Math.pow(t, i)*Math.pow(1 - t, n - i);\n}\n\nexport function getBezierCurve(arr, step) {\n\tif (step === undefined) {\n\t\tstep = 0.01;\n\t}\n\n\tif(arr.length < 2) {\n\t\treturn [];\n\t}\n\n\tvar res = new Array()\n\n\tfor (var t = 0; t < 1 + step; t += step) {\n\t\tif (t > 1) {\n\t\t\tt = 1;\n\t\t}\n\n\t\tvar ind = res.length;\n\n\t\tres[ind] = new Array(0, 0);\n\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tvar b = getBezierBasis(i, arr.length - 1, t);\n\n\t\t\tres[ind][0] += arr[i][0] * b;\n\t\t\tres[ind][1] += arr[i][1] * b;\n\t\t}\n\t}\n\n\treturn res;\n}\n\n\nexport function globalToMap (projection, position, mapObject) {\n\treturn projection.fromGlobalPixels(mapObject.converter.pageToGlobal([position.x, position.y]),\n\t\tmapObject.getZoom());\n}\n\nexport const removeByIndex = (arr, index) => {\n\tconst copy = [...arr];\n\tcopy.splice(index, 1);\n\treturn copy;\n}","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport { globalToMap } from '../utils';\n\nexport const Droppable = ({ allowedDropEffect, children, map, setTargets, setSelectedTarget, setTargetsPoints }) => {\n\tconst [_, drop] = useDrop(() => ({\n\t\taccept: 'draggable',\n\t\tdrop: (item, monitor) => {\n\t\t\tsetTargets(targets => {\n\t\t\t\tconst count = targets.filter(target => target.indexOf(item.name) !== -1).length + 1;\n\n\t\t\t\tconst mapObject = map.current\n\t\t\t\tconst projection = mapObject.options.get('projection');\n\t\t\t\tconst position = monitor.getClientOffset();\n\t\t\t\tconst newPlacemark = globalToMap(projection, position, mapObject);\n\t\t\t\tsetTargetsPoints(points => {\n\t\t\t\t\tconst copy = {...points};\n\t\t\t\t\tcopy[`${item.name} ${count}`] = [newPlacemark];\n\t\t\t\t\treturn copy;\n\t\t\t\t});\n\t\t\t\tsetSelectedTarget(`${item.name} ${count}`);\n\n\t\t\t\treturn [...targets, `${item.name} ${count}`];\n\t\t\t});\n\t\t},\n\t}), [allowedDropEffect]);\n\treturn (<div ref={drop}>\n\t\t{children}\n\t</div>);\n};\n","import React, {useEffect, useState} from 'react';\nimport { Placemark, Polyline } from 'react-yandex-maps';\nimport { getBezierCurve } from '../utils';\n\n\nexport default ({points, onPlaceMarkDrag, onPlacmarkDbClick, pointerIndex, editable}) => {\n\tconst [bezeir, setBezier] = useState(points);\n\tconst [pointer, setPointer] = useState([]);\n\n\tuseEffect(() => {\n\t\tif(points.length > 0) {\n\t\t\tsetBezier(getBezierCurve(points, 0.01));\n\t\t\tsetPointer(points[0]);\n\t\t}\n\t}, points);\n\n\treturn <>\n\t\t{ points.map((placemark, index) => <Placemark\n\t\t\tkey={`${placemark[0]}__${placemark[1]}__${index}`}\n\t\t\toptions={{draggable: editable}}\n\t\t\tonDragEnd={(e) => editable && onPlaceMarkDrag(e, index)}\n\t\t\tonDblclick={(e) => editable && onPlacmarkDbClick(e, index)}\n\t\t\tgeometry={placemark}/>)}\n\t\t{pointer.length !== 0 &&\n\t\t\t<Placemark geometry={bezeir[pointerIndex]} options={{preset: 'islands#circleIcon', iconColor: '#D9300C'}}/>}\n\t\t<Polyline\n\t\tgeometry={points}\n\t\toptions={{\n\t\t\tballoonCloseButton: false,\n\t\t\tstrokeColor: '#99ff33',\n\t\t\tstrokeWidth: 2,\n\t\t\tstrokeStyle: 'dash',\n\t\t}}/>\n\t\t<Polyline\n\t\t\tgeometry={bezeir}\n\t\t\toptions={{\n\t\t\t\tballoonCloseButton: false,\n\t\t\t\tstrokeColor: '#ff5733',\n\t\t\t\tstrokeWidth: 5,\n\t\t\t\tstrokeStyle: 'dash',\n\t\t\t}}/>\n\t\t{bezeir.length > 0 && <Polyline\n\t\t\tgeometry={bezeir.slice(0, pointerIndex)}\n\t\t\toptions={{\n\t\t\t\tballoonCloseButton: false,\n\t\t\t\tstrokeColor: '#FFD733',\n\t\t\t\tstrokeWidth: 4,\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\teditorMaxPoints: 20,\n\t\t\t}}/>}\n\t\t</>\n}","import React, {useRef, useState} from 'react';\nimport { Map, Placemark, Polyline, YMaps } from 'react-yandex-maps';\nimport { Droppable } from './Droppable';\nimport { globalToMap, removeByIndex } from '../utils';\nimport RouteBuilder from './RouteBuilder';\n\nconst mapData = {\n\tcenter: [55.751574, 37.573856],\n\tzoom: 5,\n};\n\nexport const RLSMap = ({\n\t\t\t\t\t\t   setTargets,\n\t\t\t\t\t\t   start,\n\t\t\t\t\t\t   setPointerIndex,\n\t\t\t\t\t\t   pointerIndex,\n\t\t\t\t\t\t   simulationSpeed,\n\t\t\t\t\t\t   selectedTarget,\n\t\t\t\t\t\t   setSelectedTarget,\n\t\t\t\t\t\t   targetsPoint,\n\t\t\t\t\t\t   setTargetsPoints,\n\t\t\t\t\t   }) => {\n\tconst mapRef = useRef(null);\n\n\tReact.useEffect(() => {\n\t\tif (start) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (pointerIndex < 100) {\n\t\t\t\t\tsetPointerIndex(pointerIndex => pointerIndex + 1);\n\t\t\t\t}\n\t\t\t}, 1000 / simulationSpeed);\n\t\t}\n\t}, [start, pointerIndex, simulationSpeed]);\n\n\tconst onPlaceMarkDrag = (e, index) => {\n\t\tconst position = {\n\t\t\tx: e.get('position')[0],\n\t\t\ty: e.get('position')[1],\n\t\t};\n\t\tconst mapObject = mapRef.current\n\t\tconst projection = mapObject.options.get('projection');\n\t\tconst newPosition = globalToMap(projection, position, mapObject);\n\t\tsetTargetsPoints(points => {\n\t\t\tconst poitsCopy = { ...points };\n\t\t\tconst copy = [...points[selectedTarget]];\n\t\t\tcopy[index] = newPosition;\n\t\t\tpoitsCopy[selectedTarget] = copy;\n\t\t\treturn poitsCopy;\n\t\t})\n\t}\n\n\tconst onPlacmarkDbClick = (e, index) => {\n\t\tif(index === 0) {\n\t\t\tconsole.warn('last point');\n\t\t\treturn;\n\t\t}\n\t\tsetTargetsPoints(points => {\n\t\t\tconst pointsCopy = { ...points };\n\t\t\tconst copy = [...points[selectedTarget]];\n\t\t\tconst cutted = removeByIndex(copy, index);\n\t\t\tpointsCopy[selectedTarget] = cutted;\n\t\t\treturn pointsCopy;\n\t\t});\n\t};\n\n\tconst onMapClick = (e) => {\n\t\tif (selectedTarget) {\n\t\t\tconst newPoint = e.get('coords');\n\t\t\tsetTargetsPoints(points => {\n\t\t\t\tconst copy = {...points};\n\t\t\t\tcopy[selectedTarget].push(newPoint);\n\t\t\t\treturn copy;\n\t\t\t});\n\t\t}\n\t}\n\n\treturn <YMaps>\n\t\t<Droppable\n\t\t\tallowedDropEffect={'copy'}\n\t\t\tmap={mapRef}\n\t\t\tsetTargets={setTargets}\n\t\t\tsetSelectedTarget={setSelectedTarget}\n\t\t\tsetTargetsPoints={setTargetsPoints}>\n\t\t\t<Map defaultState={mapData}\n\t\t\t\t width={800}\n\t\t\t\t height={900}\n\t\t\t\t onClick={onMapClick}\n\t\t\t\t onContextmenu={() => setSelectedTarget('')}\n\t\t\t\t instanceRef={ref => {\n\t\t\t\t\t ref && ref.behaviors.disable('dblClickZoom');\n\t\t\t\t\t mapRef.current = ref;\n\t\t\t\t }}>\n\t\t\t\t{Object.keys(targetsPoint)\n\t\t\t\t\t.map(item => ({points: targetsPoint[item], name: item}))\n\t\t\t\t\t.map((item, routeIndex) => {\n\t\t\t\t\treturn (<RouteBuilder\n\t\t\t\t\t\tpointerIndex={pointerIndex}\n\t\t\t\t\t\tpoints={item.points}\n\t\t\t\t\t\teditable={selectedTarget === item.name}\n\t\t\t\t\t\tonPlaceMarkDrag={onPlaceMarkDrag}\n\t\t\t\t\t\tonPlacmarkDbClick={onPlacmarkDbClick}\n\t\t\t\t\t\tkey={`route__${routeIndex}__${item.points.length}`}\n\t\t\t\t\t\tsimulationSpeed={simulationSpeed}\n\t\t\t\t\t\tstart={start}/>);\n\t\t\t\t})}\n\t\t\t</Map>\n\t\t</Droppable>\n\t</YMaps>\n}","import React, { useState } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { Draggable } from './components/Draggble';\nimport { RLSMap } from './components/Map';\nimport Slider from 'react-input-slider';\nimport './App.css';\n\nconst targetTypes = ['Aircraft', 'Helicopter', 'Cruise missile', 'Drone'];\n\nconst App = () => {\n\tconst [targets, setTargets] = useState([]);\n\tconst [start, setStart] = useState(false);\n\tconst [pointerIndex, setPointerIndex] = useState(0);\n\tconst [simulationSpeed, setSimulationSpeed] = useState(1);\n\tconst [pointer, setPointer] = useState([]);\n\tconst [selectedTarget, setSelectedTarget] = useState('');\n\tconst [targetsPoints, setTargetsPoints] = useState({});\n\n\tReact.useEffect(() => {\n\t\tif(targetsPoints[selectedTarget]) {\n\t\t\tsetPointer(targetsPoints[selectedTarget][0]);\n\t\t}\n\t}, [selectedTarget, targetsPoints]);\n\n\tconst onStart = () => setStart(true);\n\tconst onPause = () => setStart(false);\n\tconst onReload = () => {\n\t\tsetStart(false);\n\t\tsetPointerIndex(0);\n\t}\n\tconst onSelect = (e) => setSimulationSpeed(e.target.value + 1);\n\n\tconst onSliderChange = (e) => {\n\t\tsetStart(false);\n\t\tsetPointerIndex(e.x);\n\t}\n\n\tconst onTargetSelect = (item) => {\n\t\tsetSelectedTarget(item);\n\t\tsetPointerIndex(0);\n\t\tsetPointer(targetsPoints[selectedTarget][0]);\n\t\tsetStart(false);\n\t}\n\n\treturn (<DndProvider backend={HTML5Backend}>\n\t\t\t<div className='controls-wrapper'>\n\t\t\t\t<button onClick={onStart}>Start simulation</button>\n\t\t\t\t<button onClick={onPause}>Pause simulation</button>\n\t\t\t\t<button onClick={onReload}>Reload simulation</button>\n\t\t\t\t<Slider axis=\"x\" x={pointerIndex} onChange={onSliderChange} xmin={0} xmax={100}/>\n\t\t\t\t<select name='speed' onChange={onSelect}>\n\t\t\t\t\t{new Array(10)\n\t\t\t\t\t\t.fill(0)\n\t\t\t\t\t\t.map((item, index) => <option key={`option__${index + 1}`} value={index + 1}>{index + 1}x</option>)}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div className='wrapper'>\n\t\t\t\t<div className='menu-wrapper'>\n\t\t\t\t\t<h3>Target types</h3>\n\t\t\t\t\t<ul className='list'>\n\t\t\t\t\t\t{targetTypes.map(item => <li\n\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t\tclassName='list-item'>\n\t\t\t\t\t\t\t<Draggable name={item}/>\n\t\t\t\t\t\t</li>)}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3>Targets</h3>\n\t\t\t\t\t<ul className='list'>\n\t\t\t\t\t\t{targets.map(item => <li\n\t\t\t\t\t\t\tkey={item}\n\t\t\t\t\t\t\tclassName={`list-item ${selectedTarget === item ? 'list-item--selected' : ''}`}\n\t\t\t\t\t\t\tonClick={() => onTargetSelect(item)}>\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</li>)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div >\n\t\t\t\t\t\t<RLSMap\n\t\t\t\t\t\t\t\tsetTargets={setTargets}\n\t\t\t\t\t\t\t\tstart={start}\n\t\t\t\t\t\t\t\tsetPointerIndex={setPointerIndex}\n\t\t\t\t\t\t\t\tpointerIndex={pointerIndex}\n\t\t\t\t\t\t\t\tsimulationSpeed={simulationSpeed}\n\t\t\t\t\t\t\t\tpointer={pointer}\n\t\t\t\t\t\t\t\tselectedTarget={selectedTarget}\n\t\t\t\t\t\t\t\tsetSelectedTarget={setSelectedTarget}\n\t\t\t\t\t\t\t\ttargetsPoint={targetsPoints}\n\t\t\t\t\t\t\t\tsetTargetsPoints={setTargetsPoints}/>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DndProvider>\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}